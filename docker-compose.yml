services:
    postgres:
        image: pgvector/pgvector:pg16
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: app
            POSTGRES_DB: cargorisk
        ports: ["5432:5432"]
        volumes: ["pgdata:/var/lib/postgresql/data"]
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U app -d cargorisk"]
            interval: 5s
            timeout: 5s
            retries: 20

    redis:
        image: redis:7
        ports: ["6379:6379"]

    minio:
        image: minio/minio:latest
        command: server /data --console-address ":9001"
        environment:
            MINIO_ROOT_USER: minio
            MINIO_ROOT_PASSWORD: minio123
        ports: ["9000:9000", "9001:9001"]
        volumes: ["minio:/data"]

    mc:
        image: minio/mc:latest
        profiles: ["tools"] # won't start on `up`, only when you run it
        entrypoint: ["mc"]
        command: "mc --version"
        depends_on:
            - minio

    api:
        build:
            context: ./services/api
            dockerfile: Dockerfile
        volumes:
            - ./services/api:/app # correct
        env_file: .env
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
            minio:
                condition: service_started
        ports: ["8000:8000"]

    worker:
        build:
            context: ./services/worker
            dockerfile: Dockerfile
        env_file: .env
        depends_on: [api, redis, postgres, minio]

    web:
        build:
            context: ./web
            dockerfile: Dockerfile
        env_file: .env
        depends_on: [api]
        ports: ["3000:3000"]

volumes:
    pgdata:
    minio:
